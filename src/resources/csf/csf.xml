<?xml version="1.0" encoding="UTF-8"?>
<Csf>
	<Category name="client" description="客户端运行引擎需要的配置">
		<Item name="csf.retry.policy">
			<value>RetryNTimes(0)</value>
			<description>客户端集群策略（重试策略）：重试N次,括号中为0或负数不重试</description>
		</Item>
		<Item name="csf.client.serviceinfo.fetcher">
			<value>
				com.ai.aif.csf.client.service.info.fetcher.FetchServiceInfoFromServiceRouter
			</value>
			<description>
				客户端获取服务信息的方式 从服务路由器获取配置为
				com.ai.aif.csf.client.service.info.fetcher.FetchServiceInfoFromServiceRouter
				从jvm缓存中获取（通常在开发的时候使用，这样服务路由器可以对开发透明）com.ai.aif.csf.db.client.service.info.fetcher.FetchServiceInfoFromDBCache
			</description>
		</Item>
		<Item name="csf.client.exception.handler">
			<value>
				com.ai.aif.csf.client.service.exception.handler.DefaultClientExceptionHandler
			</value>
			<description>
				1、该配置开放对业务异常的处理，可以对异常进行收缩（广西）或其他处理;
				2、框架默认实现，直接将此类异常抛出，不做处理
				3、广西异常收缩实现类com.ai.aif.csf.platform.exception.filter.ExceptionShrinkFilter
			</description>
		</Item>
		<Item name="csf.client.extend">
			<value>
				com.ai.aif.csf.client.extend.appframe.ClientAppframeExtend
			</value>
			<description>
				客户端扩展，可以扩展是否携带用户信息，是否根据regionid路由 默认不携带appframe相关的对象
			</description>
		</Item>
		<ChildCategory name="client.timeout" description="客户端超时配置">
			<Item name="csf.client.default.connection.timeout">
				<value>1000</value>
				<description>客户端默认连接创建时间，毫秒为单位；必须配置，不配置报错</description>
			</Item>
			<Item name="csf.client.default.socket.timeout">
				<value>80000</value>
				<description>
					客户端默认socket不活动最大时间，毫秒为单位；必须配置，不配置报错
				</description>
			</Item>
		</ChildCategory>
		<ChildCategory name="client.warmup" description="客户端预热">
			<Item name="warm.interceptor" description="客户端预热">
				<value></value>
				<description>
					1、预热拦截器，做预热前、预热后、预热失败的处理 以分号;分割
					2、实现接口com.ai.aif.csf.api.common.warmup.IWarmupInterceptor
				</description>
			</Item>
			<Item name="warm.upper" description="客户端预热">
				<value></value>
				<description>
					1、预热实现类,以分号;分割
					2、com.ai.aif.csf.api.common.warmup.IWarmUpper
				</description>
			</Item>
		</ChildCategory>

		<!-- <Category name="develop" description="开发模式才可能需要到的配置"> <Item name="csf.develop.pattern">
			<value>false</value> <description>是否开发模式</description> </Item> <Item name="csf.develop.serviceinfo.constructor">
			<value>com.ai.aif.csf.api.deveplop.serviceinfo.constructor.IDeveplopServiceInfoConstructorZJ
			</value> <description> 1、配置IDeveplopServiceInfoConstructor接口的实现，配合DevelopParamsMappingFilter过滤器使用
			2、开发模式下才可能需要配置该项，根据serviceCode命名，还原出服务调用信息;因此需要serviceCode的命名，能够还原出服务调用信息
			3、该模式下，可以不依赖注册的服务资产信息，即所调用的服务可以不注册 4、生产环境该配置留空即可 </description> </Item> </Category> -->

		<Item name="csf.clent.direct.check.flag">
			<value>100000</value>
		</Item>
	</Category>
	<Category name="server" description="服务端需要的配置">
		<Item name="csf.no.wrapper.exceptions">
			<value>com.ai.common.i18n.BusinessException;com.ai.common.esb.ESBBusinessException</value>
			<description>
				1、异常的完全限定名，多个可以传输的异常以分号;分割 2、默认情况异常不传递,配置为空
				在广西此处应该配置为com.ai.common.i18n.BusinessException
				3、服务端在调用业务方法，抛出这些异常的时候，不做包装处理，异常序列化传输到客户端
				4、客户端在获取到这些异常的时候，将异常传递给客户端异常处理接口（csf.client.exception.handler中配置的类）
			</description>
		</Item>
		<Item name="csf.need.upload.connection.num">
			<value>false</value>
			<description>
				是否需要将调用数上报到zookeeper(主要为了做最少连接数负载）true/false
			</description>
		</Item>
		<Item name="csf.server.default.timeout">
			<value>90000</value>
			<description>
				服务端默认超时控制时间，毫秒为单位；必须配置，不配置报错；云南为90000
			</description>
		</Item>

		<ChildCategory name="server.filters" description="服务端过滤器配置">
			<Item name="csf.params.mapping.filter">
				<value>
					com.ai.aif.csf.executor.request.filter.params.mapping.TransportParamsMappingFilter
				</value>
				<description>
					<!-- 系统提供的参数映射过滤器,这些过滤器都需要支持开发模式 -->
					#入参、出参为固定类型、单个的时候使用该过滤器com.ai.aif.csf.executor.request.filter.params.mapping.SingleParamMappingFilter
					#支持pojo转化的过滤器:com.ai.aif.csf.executor.request.filter.params.mapping.ParamsMappingFilter
					#透传的参数过滤器:com.ai.aif.csf.executor.request.filter.params.mapping.TransportParamsMappingFilter
					#服务描述文件过滤器:com.ai.aif.csf.executor.request.filter.params.mapping.MetaParamsMappingFilter
				</description>
			</Item>
			<Item name="csf.remote.custom.filters">
				<value>
					com.ai.common.csf.filter.CsfCallerFilterImpl;com.ai.common.csf.filter.BusiConsistencyFilterImpl
				</value>
				<description>
					远程调用自定义过滤器，以分号;分割 多个过滤器，配置在前面的先执行
					对于广西的服务治理平台，需要配置com.ai.aif.csf.platform.request.fore.handler.PlatformRequestForeFilter来记录渠道信息
				</description>
			</Item>
			<Item name="csf.local.custom.filters">
				<value>com.ai.common.csf.filter.CsfCallerFilterImpl</value>
				<description>
					本地调用自定义过滤器，以分号;分割 多个过滤器，配置在前面的先执行
				</description>
			</Item>
		</ChildCategory>
		<ChildCategory name="server.threadpool"
			description="服务端线程池配置">
			<Item name="threadpool.thread.num">
				<value>8</value>
				<description>
					服务执行线程数，不配置为Runtime.getRuntime().availableProcessors()
					+ 1;
				</description>
			</Item>
			<Item name="threadpool.queue.length">
				<vlaue>1000</vlaue>
				<description>服务执行队列长度</description>
			</Item>
		</ChildCategory>
		<ChildCategory name="server.warmup" description="服务端预热">
			<Item name="warm.interceptor" description="服务端预热拦截器">
				<value>
					com.ai.aif.csf.executor.warm.interceptor.RegisterInterceptor
				</value>
				<description>
					1、预热拦截器，做预热前、预热后、预热失败的处理 以分号;分割
					2、实现接口com.ai.aif.csf.api.common.warmup.IWarmupInterceptor
				</description>
			</Item>
			<Item name="warm.upper" description="服务端预热">
				<value></value>
				<description>
					1、预热实现类,以分号;分割
					2、com.ai.aif.csf.api.common.warmup.IWarmUpper
				</description>
			</Item>
		</ChildCategory>
		<ChildCategory name="server.safe.shutdown"
			description="服务端安全停机">
			<Item name="safe.shutdown.timeout" description="服务端停机">
				<value></value>
				<description>
					服务端停机超时时间，默认等于csf.server.default.timeout的值
				</description>
			</Item>
			<Item name="safe.shutdown.custom"
				description="服务端停机自定义任务">
				<value></value>
				<description>
					1、停机时需要完成的任务继承该接口(自定义任务)
					2、实现接口com.ai.aif.csf.api.common.safe.shutdown.ISafeShutdown
				</description>
			</Item>
		</ChildCategory>
	</Category>
	<Category name="common" description="客户端和服务端都需要的配置">
		<Item name="app.mapping">
			<ClusterMapping>
				<center name="ent">
					<cluster name="crm_ent_chencong">
						<group name="normal">
							<app name="crm_ent_chencong" />
						</group>
					</cluster>
				</center>
				<!--客户端-->
				<center name="ams">
                    <cluster name="crm_ams_center">
                     <client name="crm_ent"/>
                     </cluster>
                 </center>

                 <center name="cust">
                      <cluster name="crm_cust_center">
                      <client name="crm_ent"/>
                      </cluster>
                 </center>

                 <center name="open">
                     <cluster name="crm_open_center">
                     <client name="crm_ent"/>
                     </cluster>
                 </center>

                 <center name="res">
                    <cluster name="crm_res_center">
                    <client name="crm_ent"/>
                     </cluster>
                 </center>

                 <center name="ocrm">
                       <cluster name="crm_ocrm_order">
                       <client name="crm_ent"/>
                        </cluster>
                 </center>

				<center name="rule">
					<cluster name="crm_rule_center">
						<client name="crm_ent"/>
					</cluster>
				</center>
				<!--<center name="ent">-->
					<!--<cluster name="crm_ent_chencong">-->
					<!--</cluster>-->
				<!--</center>-->
			</ClusterMapping>
		</Item>
		<Item name="csf.integrated.centers">
			<value>ent</value>
			<description>
				1、中心集成定义(当前有哪些中心的代码是部署在一起的,以分号分割，比如order;product;
				2、对于前后端分离/融合中心，前端的该文件都配置为force@remote
			</description>
		</Item>
		<!-- <value>20.26.25.37:2181,20.26.25.38:2181,20.26.25.39:2181</value> -->
		<Item name="zk.server.list">
		     <value>
			 <!--新业务测试环境-->
                20.26.25.37:2183,20.26.25.38:2183,20.26.25.39:2183
                <!--项目开发环境 -->
                <!--20.26.20.92:2183,20.26.20.93:2183,20.26.20.94:2183-->
                <!--项目测试环境-->
				 <!-- 20.26.25.44:2183,20.26.25.45:2183,20.26.25.46:2183-->
              </value>
              <description>多个地址用逗号(,)隔开</description>
          </Item>
      </Category>
  </Csf>
